# This workflow is designed to automate the process of building a release IPA for the 'stage' flavor
# of a Flutter application and distributing it to Firebase App Distribution.
name: Build iOS Stage

on:
  # Workflow is triggered manually through the GitHub Actions interface.
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      # Checkouts the repository with entire commit history, which is needed to calculate the
      # correct build version code in 'Setup environment' step.
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setups Java, Flutter and correct version code before build.
      - name: Setup environment
        uses: ./.github/actions/setup

      # Prepares keychain and builds signed IPA.
      - name: Build iOS IPA
        uses: ./.github/actions/build-ipa
        with:
          certificate_file_base64: ${{ secrets.IOS_STAGE_CERTIFICATE_FILE_BASE64 }}
          certificate_password: ${{ secrets.IOS_STAGE_CERTIFICATE_PASSWORD }}
          provisioning_profile_base64: ${{ secrets.IOS_STAGE_PROVISIONING_PROFILE_BASE64 }}
          keychain_password: ${{ secrets.IOS_TEMPORARY_KEYCHAIN_PASSWORD }}
          build_flavor: 'stage'
          build_export_options: 'ios/ExportOptionsStage.plist'

      # Uploads iOS related artifacts from build to GitHub Actions.
      - name: Upload artifacts
        uses: ./.github/actions/artifacts-ios

  # Use a new job, which runs on Linux, because Firebase App Distribution action does not support MacOS runner.
  distribute:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Checkouts the repository.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Downloads iOS related artifacts.
      - name: Download artifacts
        uses: actions/download-artifact@v4

      # Upload IPA to the Firebase and distribute it with latest release notes.
      - name: Distribute to Firebase App Distribution
        uses: ./.github/actions/distribute
        with:
          serviceCredentials: ${{ secrets.FIREBASE_APP_DISTRIBUTION_DEV_CREDENTIAL_FILE_CONTENT }}
          path: 'ios-artifacts/build/ios/ipa/Zachraň Oběd Stage.ipa'
          application: ${{ secrets.FIREBASE_APP_DISTRIBUTION_IOS_STAGE_APP_ID }}
          groups: ${{ vars.FIREBASE_APP_DISTRIBUTION_GROUPS }}
